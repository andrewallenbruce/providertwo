# Generated by roxygen2: do not edit by hand

export(Current)
export(CurrentMain)
export(CurrentOpen)
export(CurrentProvider)
export(Temporal)
export(TemporalMain)
export(TemporalMainGroup)
export(TemporalOpen)
export(TemporalOpenGroup)
export(affiliations)
export(as_chr)
export(as_date)
export(as_datetime)
export(as_fda_date)
export(as_int)
export(as_num)
export(bureau_code)
export(catalog_main)
export(catalog_main2)
export(catalog_open)
export(catalog_open2)
export(catalog_provider)
export(check_luhn)
export(class_resources)
export(cli_n_results_requests)
export(delist)
export(delist_elem)
export(desplit)
export(empty)
export(endpoint)
export(ends_with)
export(enrollees)
export(eval_params)
export(false)
export(fields)
export(fields_provider)
export(fields_public)
export(flatten_column)
export(format_query_provider)
export(format_query_public)
export(gelm)
export(get_data_elem)
export(get_fields)
export(get_nrows)
export(get_pin)
export(get_resources)
export(getelem)
export(greater_equal)
export(greater_than)
export(handle_na)
export(if_empty_null)
export(iif_else)
export(includes)
export(inside)
export(invert_named)
export(is_complete_with_limit)
export(is_in)
export(less_equal)
export(less_than)
export(list_pins)
export(luhn_check)
export(main_current)
export(main_nrows_fields)
export(main_temporal)
export(main_temporal_group)
export(map_na_if)
export(map_parse_json_response_provider)
export(map_parse_json_response_public)
export(max_vlen)
export(mount_board)
export(na)
export(na_if)
export(not_in)
export(not_na)
export(not_null)
export(nppes_nlm)
export(nrows_provider)
export(nrows_public)
export(null)
export(offset_length)
export(offset_sequence)
export(open_add_dlurl)
export(open_clean_grouped)
export(open_clean_temp)
export(open_current)
export(open_dictionary)
export(open_general)
export(open_grouped_summary)
export(open_grouped_yearly)
export(open_nrows_fields)
export(open_ownership)
export(open_profiles)
export(open_research)
export(open_uuid_url)
export(outside)
export(parse_json_response_provider)
export(parse_json_response_public)
export(pdetect)
export(perform_request_provider)
export(perform_request_public)
export(print_list)
export(process_params)
export(program_code)
export(prov_nrows_fields)
export(prov_uuid_dict)
export(prov_uuid_url)
export(provider_current)
export(query_nrows_provider)
export(query_nrows_public)
export(random_string)
export(recode_iso8601)
export(remove_all_na)
export(remove_quotes)
export(replace_fixed)
export(req_perform_iterative_offset)
export(resp_simple_json)
export(roundup)
export(search_in)
export(seq_along0)
export(sf_at)
export(sf_c)
export(sf_chars)
export(sf_conv)
export(sf_detect)
export(sf_extract)
export(sf_ndetect)
export(sf_nextract)
export(sf_remove)
export(sf_replace)
export(sf_smush)
export(sf_strsplit)
export(sf_sub)
export(smush_elem)
export(starts_with)
export(strsort)
export(subset_detect)
export(tidyup)
export(true)
export(uniq)
export(uniq_narm)
export(uniq_vlen)
export(vlen)
if (getRversion() < "4.3.0") importFrom("S7", "@")
import(RcppSimdJson)
import(S7)
import(httr2)
import(rlang)
importFrom(cheapr,"%!in_%")
importFrom(cheapr,as_df)
importFrom(cheapr,cheapr_if_else)
importFrom(cheapr,cheapr_rev)
importFrom(cheapr,lag_)
importFrom(cheapr,new_df)
importFrom(cheapr,row_na_counts)
importFrom(cheapr,seq_)
importFrom(cheapr,sset)
importFrom(cheapr,which_)
importFrom(collapse,"%==%")
importFrom(collapse,add_vars)
importFrom(collapse,colorder)
importFrom(collapse,fcompute)
importFrom(collapse,fcount)
importFrom(collapse,fmax)
importFrom(collapse,fnobs)
importFrom(collapse,funique)
importFrom(collapse,get_elem)
importFrom(collapse,join)
importFrom(collapse,mtt)
importFrom(collapse,rowbind)
importFrom(collapse,roworder)
importFrom(collapse,rsplit)
importFrom(collapse,sbt)
importFrom(collapse,slt)
importFrom(collapse,ss)
importFrom(fastplyr,as_tbl)
importFrom(fastplyr,f_nest_by)
importFrom(fastplyr,f_ungroup)
importFrom(fastplyr,new_tbl)
importFrom(glue,glue)
importFrom(glue,glue_collapse)
importFrom(kit,nswitch)
importFrom(stringi,stri_detect_regex)
importFrom(stringi,stri_extract_all_regex)
importFrom(stringi,stri_replace_all_regex)
importFrom(stringi,stri_trim)
importFrom(tools,file_ext)
importFrom(tools,toTitleCase)
